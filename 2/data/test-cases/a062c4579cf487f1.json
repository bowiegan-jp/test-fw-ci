{"uid":"a062c4579cf487f1","name":"Dynamic Rule Sum Preferred Currency - Blocked by watchlist","fullName":"tests.end2end.rules_console.dynamic_rule_behaviour.test_preferred_curr_rule_sum_blocked.TestPreferredCurrRuleSumBlocked#test_preferred_curr_watchlist","historyId":"93f0be36786ef84adb89eeed5668045f","time":{"start":1658401093817,"stop":1658401113965,"duration":20148},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_preferred_curr_rule_sum_blocked.TestPreferredCurrRuleSumBlocked object at 0x7f5b7e78d410>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f5b7e989150>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f5b7ed9a3d0>\ncleanup_smart_rules = ['t_pc_rs_b_Preferred Currency']\ncleanup_watchlists = ['TWL_pc_rs_b_Preferred Currency']\n\n    @allure.title(\"Dynamic Rule Sum Preferred Currency - Blocked by watchlist\")\n    def test_preferred_curr_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'pc_rs_b_{self._get_dynamic_velocity_abbrev(\"Billing Amount (based on preferred currency)\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5000\n        TEST_CURRENCY = \"('KRW')\"\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'pc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Billing Amount (based on preferred currency)\")\n        create_rule_page.select_dynamic_cond_threshold_currency(TEST_CURRENCY)\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments('test automation rule (delete me)')\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(3):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        krw_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        krw_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        krw_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            'billing_currency': \"KRW\",\n            'billing_amt': '1000',\n        })\n    \n        krw_transaction2 = copy.deepcopy(txn_samples.BASE_TEST)\n        krw_transaction2.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        krw_transaction2.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP,\n            'billing_currency': \"KRW\",\n            'billing_amt': '1000',\n        })\n    \n        sgd_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        sgd_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        sgd_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            'billing_currency': \"SGD\",\n            'billing_amt': '20',\n        })\n    \n        # Based on KRW 5000 threshold\n        # First 3 should be scored\n        for _ in range(3):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(krw_transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_preferred_curr_rule_sum_blocked.py:485: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cfg","time":{"start":1658399575670,"stop":1658399575670,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1658399575671,"stop":1658399575671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1658400752805,"stop":1658400754243,"duration":1438},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout","time":{"start":1658400754243,"stop":1658400754243,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login","time":{"start":1658401093681,"stop":1658401093814,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"check_known_issues","time":{"start":1658401093681,"stop":1658401093681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"fw_api_all","time":{"start":1658401093815,"stop":1658401093815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"txn_samples","time":{"start":1658401093815,"stop":1658401093815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_version","time":{"start":1658401093815,"stop":1658401093815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_watchlists","time":{"start":1658401093816,"stop":1658401093816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_smart_rules","time":{"start":1658401093816,"stop":1658401093816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_preferred_curr_rule_sum_blocked.TestPreferredCurrRuleSumBlocked object at 0x7f5b7e78d410>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f5b7e989150>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f5b7ed9a3d0>\ncleanup_smart_rules = ['t_pc_rs_b_Preferred Currency']\ncleanup_watchlists = ['TWL_pc_rs_b_Preferred Currency']\n\n    @allure.title(\"Dynamic Rule Sum Preferred Currency - Blocked by watchlist\")\n    def test_preferred_curr_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'pc_rs_b_{self._get_dynamic_velocity_abbrev(\"Billing Amount (based on preferred currency)\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5000\n        TEST_CURRENCY = \"('KRW')\"\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'pc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Billing Amount (based on preferred currency)\")\n        create_rule_page.select_dynamic_cond_threshold_currency(TEST_CURRENCY)\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments('test automation rule (delete me)')\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(3):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        krw_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        krw_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        krw_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            'billing_currency': \"KRW\",\n            'billing_amt': '1000',\n        })\n    \n        krw_transaction2 = copy.deepcopy(txn_samples.BASE_TEST)\n        krw_transaction2.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        krw_transaction2.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP,\n            'billing_currency': \"KRW\",\n            'billing_amt': '1000',\n        })\n    \n        sgd_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        sgd_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        sgd_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            'billing_currency': \"SGD\",\n            'billing_amt': '20',\n        })\n    \n        # Based on KRW 5000 threshold\n        # First 3 should be scored\n        for _ in range(3):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(krw_transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_preferred_curr_rule_sum_blocked.py:485: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401093819,"stop":1658401094427,"duration":608},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658401094444,"stop":1658401095067,"duration":623},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Add New Rule","time":{"start":1658401095071,"stop":1658401095512,"duration":441},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401095072,"stop":1658401095409,"duration":337},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Tick Activate Rule upon save","time":{"start":1658401095512,"stop":1658401095585,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Fill in Rule Name","time":{"start":1658401095585,"stop":1658401095785,"duration":200},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'t_pc_rs_b_Preferred Currency'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select static condition from dropdown: 'Email'","time":{"start":1658401095785,"stop":1658401095884,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"field","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select condition option from dropdown: 'Matches'","time":{"start":1658401095884,"stop":1658401095981,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"opt","value":"'Matches'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value type from dropdown: 'Email:'","time":{"start":1658401095981,"stop":1658401096125,"duration":144},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email:'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in value input: 'pc_rs_wl@test.com'","time":{"start":1658401096125,"stop":1658401096790,"duration":665},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'pc_rs_wl@test.com'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658401096790,"stop":1658401096796,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Add dynamic condition","time":{"start":1658401096796,"stop":1658401096879,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Select dynamic velocity type: 'Billing Amount (based on preferred currency)'","time":{"start":1658401096879,"stop":1658401097018,"duration":139},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Billing Amount (based on preferred currency)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select currency value: '('KRW')'","time":{"start":1658401097018,"stop":1658401097109,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'('KRW')'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic treshold: 5000","time":{"start":1658401097109,"stop":1658401097241,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"5000"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic condition value","time":{"start":1658401097241,"stop":1658401097346,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"3"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select dynamic group by condition: 'Email'","time":{"start":1658401097346,"stop":1658401097603,"duration":257},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in comments","time":{"start":1658401097603,"stop":1658401097758,"duration":155},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm new rule","time":{"start":1658401097758,"stop":1658401100911,"duration":3153},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Filter rules table by name","time":{"start":1658401102913,"stop":1658401103444,"duration":531},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401102913,"stop":1658401102961,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"rule_name","value":"'t_pc_rs_b_Preferred Currency'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get first rule in table","time":{"start":1658401104445,"stop":1658401104611,"duration":166},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Expand Rules Console Navbar","time":{"start":1658401104635,"stop":1658401104681,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658401104686,"stop":1658401104802,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401105104,"stop":1658401105227,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Watchlist Name","time":{"start":1658401105344,"stop":1658401105521,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'TWL_pc_rs_b_Preferred Currency'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Watchlist Type","time":{"start":1658401105521,"stop":1658401105603,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'IP Address'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value to edit #\"1\"","time":{"start":1658401105604,"stop":1658401105604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"number","value":"1"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Value option dropdown: \"'IP Address:'\"","time":{"start":1658401105604,"stop":1658401105739,"duration":135},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658401105604,"stop":1658401105625,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f5b7ea9fa10>, 'IP Address:')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter input value: \"'127.5.5.99'\"","time":{"start":1658401105739,"stop":1658401106100,"duration":361},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658401105739,"stop":1658401105756,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter IPv4 input","time":{"start":1658401105784,"stop":1658401106100,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"fbcc1bec4785d4f302afc032d832a65e\", element=\"d73a0622-ffda-40aa-9646-0c62a02dcabc\")>"},{"name":"ip_addr","value":"'127.5.5.99'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f5b7ea9fa10>, '127.5.5.99')"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658401106100,"stop":1658401106105,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"decision_value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter Comments","time":{"start":1658401106105,"stop":1658401106310,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm create watchlist","time":{"start":1658401106310,"stop":1658401106392,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401108422,"stop":1658401108450,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658401109975,"stop":1658401110151,"duration":176},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658401109997,"stop":1658401110090,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Activate Watchlist","time":{"start":1658401110359,"stop":1658401111467,"duration":1108},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get Watchlist Status","time":{"start":1658401111467,"stop":1658401111510,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Send test transaction","time":{"start":1658401111510,"stop":1658401112119,"duration":609},"status":"passed","steps":[],"attachments":[{"uid":"fca21d4e2fe12145","name":"Transaction payload details","source":"fca21d4e2fe12145.txt","type":"text/plain","size":1341},{"uid":"46ecce5623803dda","name":"Transaction response details","source":"46ecce5623803dda.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '3'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401112119,"stop":1658401112119,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401112119,"stop":1658401112119,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_pc_rs_b_Preferred Currency'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401112119,"stop":1658401112702,"duration":583},"status":"passed","steps":[],"attachments":[{"uid":"8a0870948e8c0fe7","name":"Transaction payload details","source":"8a0870948e8c0fe7.txt","type":"text/plain","size":1341},{"uid":"ad1f40a14451a239","name":"Transaction response details","source":"ad1f40a14451a239.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '4'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401112703,"stop":1658401112703,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401112703,"stop":1658401112703,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_pc_rs_b_Preferred Currency'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401112703,"stop":1658401113301,"duration":598},"status":"passed","steps":[],"attachments":[{"uid":"772f5b7abdef21a2","name":"Transaction payload details","source":"772f5b7abdef21a2.txt","type":"text/plain","size":1341},{"uid":"1b6ff33e5744e804","name":"Transaction response details","source":"1b6ff33e5744e804.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '4'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401113301,"stop":1658401113301,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401113301,"stop":1658401113301,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_pc_rs_b_Preferred Currency'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401113302,"stop":1658401113964,"duration":662},"status":"passed","steps":[],"attachments":[{"uid":"ba09a9cee3d664d","name":"Transaction payload details","source":"ba09a9cee3d664d.txt","type":"text/plain","size":1353},{"uid":"ea21a0fa20548b30","name":"Transaction response details","source":"ea21a0fa20548b30.txt","type":"text/plain","size":142}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-000', 'merch_name': 'test-automation-base', 'merch_cat_code': '5732', 'merch_group_id': '54321', 'ISO_MTI': '0110', 'pos_entry_mode': '01', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.1.1', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'pc_rs_wl@test.com', 'cc_firstname': 'tony', 'cc_lastname': 'stark', 'cc_bin': '555555', 'cc_last4': '4444', 'cc_last_digits': '4444', 'cc_hash': '2f725bbd1f405a1ed0336abaf85ddfeb6902a9984a76fd877c3b5cc3b5085a82', 'cc_exp_date': '0226', 'billing_firstname': 'tony', 'billing_lastname': 'stark', 'billing_address': 'Malibu Point', 'billing_state': 'California', 'billing_country_alpha2': 'US', 'billing_postal_code': '10880', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '2', 'transaction_id_ext': 'tt_pc_rs_b_Preferred Currency', 'transaction_id_merch': '321'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401113965,"stop":1658401113965,"duration":0},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 51, in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[{"name":"Assert transaction is scored","time":{"start":1658401113965,"stop":1658401113965,"duration":0},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_pc_rs_b_Preferred Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_pc_rs_b_Preferred Currency'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"aaa708fd82e0c942","name":"8b0275b7-cf0f-4c79-9f01-ebc169451ec5-attachment.png","source":"aaa708fd82e0c942.png","type":"image/png","size":78709}],"parameters":[],"stepsCount":53,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"cleanup_watchlists::0","time":{"start":1658401114098,"stop":1658401119518,"duration":5420},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401114100,"stop":1658401114152,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658401114152,"stop":1658401114276,"duration":124},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401116549,"stop":1658401116597,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658401117976,"stop":1658401118164,"duration":188},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658401117994,"stop":1658401118090,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Delete Watchlist","time":{"start":1658401118344,"stop":1658401119122,"duration":778},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Confirm Delete Watchlist","time":{"start":1658401119122,"stop":1658401119308,"duration":186},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"cleanup_smart_rules::0","time":{"start":1658401119519,"stop":1658401123640,"duration":4121},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401119521,"stop":1658401119560,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658401119561,"stop":1658401119655,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Filter rules table by name","time":{"start":1658401121857,"stop":1658401122254,"duration":397},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401121857,"stop":1658401121910,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"rule_name","value":"'t_pc_rs_b_Preferred Currency'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get first rule in table","time":{"start":1658401123255,"stop":1658401123402,"duration":147},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click delete rule","time":{"start":1658401123402,"stop":1658401123509,"duration":107},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click confirm delete rule","time":{"start":1658401123510,"stop":1658401123612,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"fw_api_all::0","time":{"start":1658401123641,"stop":1658401123641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login::0","time":{"start":1658401123642,"stop":1658401123642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout::0","time":{"start":1658401123643,"stop":1658401124365,"duration":722},"status":"passed","steps":[{"name":"Click Logout","time":{"start":1658401123777,"stop":1658401123853,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"browser::0","time":{"start":1658401124367,"stop":1658401124426,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('check_known_issues')"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.end2end.rules_console.dynamic_rule_behaviour"},{"name":"suite","value":"test_preferred_curr_rule_sum_blocked"},{"name":"subSuite","value":"TestPreferredCurrRuleSumBlocked"},{"name":"host","value":"ip-10-20-30-10"},{"name":"thread","value":"27377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.end2end.rules_console.dynamic_rule_behaviour.test_preferred_curr_rule_sum_blocked"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"api_version","value":"'4'"},{"name":"browser","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('check_known_issues')","regression"]},"source":"a062c4579cf487f1.json","parameterValues":["'4'","'chrome'"]}