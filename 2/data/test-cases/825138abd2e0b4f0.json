{"uid":"825138abd2e0b4f0","name":"Dynamic Rule Sum Transaction Count - Blocked by Watchlist","fullName":"tests.end2end.rules_console.dynamic_rule_behaviour.test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked#test_txn_count_watchlist","historyId":"a8ad36eb6898e9bab3174bc78f315136","time":{"start":1658401429453,"stop":1658401450737,"duration":21284},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked object at 0x7f5b7ede8110>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f5b7e783890>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f5b7facd390>\ncleanup_smart_rules = ['t_tc_rs_wl_Txn Count']\ncleanup_watchlists = ['TWL_tc_rs_wl_Txn Count']\n\n    @allure.title(\"Dynamic Rule Sum Transaction Count - Blocked by Watchlist\")\n    def test_txn_count_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'tc_rs_wl_{self._get_dynamic_velocity_abbrev(\"Transaction Count\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'tc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Transaction Count\")\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments(TEST_COMMENT)\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(TEST_THRESHOLD + 1):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        transaction.update({\n            \"user_email\": TEST_EMAIL\n        })\n        wl_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        wl_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        wl_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP\n        })\n    \n        # First N-2 Txns should pass without hitting the dynamic rule\n        for _ in range(TEST_THRESHOLD - 2):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_txn_count_rule_sum_blocked.py:380: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cfg","time":{"start":1658399575670,"stop":1658399575670,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1658399575671,"stop":1658399575671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1658401124434,"stop":1658401125861,"duration":1427},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout","time":{"start":1658401125861,"stop":1658401125862,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login","time":{"start":1658401429374,"stop":1658401429448,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"check_known_issues","time":{"start":1658401429374,"stop":1658401429374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"txn_samples","time":{"start":1658401429449,"stop":1658401429449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_version","time":{"start":1658401429450,"stop":1658401429450,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"fw_api_all","time":{"start":1658401429451,"stop":1658401429451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_watchlists","time":{"start":1658401429452,"stop":1658401429452,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_smart_rules","time":{"start":1658401429452,"stop":1658401429452,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked object at 0x7f5b7ede8110>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f5b7e783890>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f5b7facd390>\ncleanup_smart_rules = ['t_tc_rs_wl_Txn Count']\ncleanup_watchlists = ['TWL_tc_rs_wl_Txn Count']\n\n    @allure.title(\"Dynamic Rule Sum Transaction Count - Blocked by Watchlist\")\n    def test_txn_count_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'tc_rs_wl_{self._get_dynamic_velocity_abbrev(\"Transaction Count\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'tc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Transaction Count\")\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments(TEST_COMMENT)\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(TEST_THRESHOLD + 1):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        transaction.update({\n            \"user_email\": TEST_EMAIL\n        })\n        wl_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        wl_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        wl_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP\n        })\n    \n        # First N-2 Txns should pass without hitting the dynamic rule\n        for _ in range(TEST_THRESHOLD - 2):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_txn_count_rule_sum_blocked.py:380: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, ...}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401429455,"stop":1658401429929,"duration":474},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658401429952,"stop":1658401430284,"duration":332},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Add New Rule","time":{"start":1658401430288,"stop":1658401430685,"duration":397},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401430288,"stop":1658401430574,"duration":286},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Tick Activate Rule upon save","time":{"start":1658401430685,"stop":1658401430778,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Fill in Rule Name","time":{"start":1658401430778,"stop":1658401430909,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select static condition from dropdown: 'Email'","time":{"start":1658401430909,"stop":1658401430993,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"field","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select condition option from dropdown: 'Matches'","time":{"start":1658401430993,"stop":1658401431080,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"opt","value":"'Matches'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value type from dropdown: 'Email:'","time":{"start":1658401431081,"stop":1658401431218,"duration":137},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email:'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in value input: 'tc_rs_wl@test.com'","time":{"start":1658401431219,"stop":1658401431882,"duration":663},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'tc_rs_wl@test.com'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658401431882,"stop":1658401431889,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Add dynamic condition","time":{"start":1658401431889,"stop":1658401431964,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Select dynamic velocity type: 'Transaction Count'","time":{"start":1658401431964,"stop":1658401432079,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Transaction Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic treshold: 5","time":{"start":1658401432080,"stop":1658401432181,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"5"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic condition value","time":{"start":1658401432182,"stop":1658401432314,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"3"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select dynamic group by condition: 'Email'","time":{"start":1658401432314,"stop":1658401432549,"duration":235},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in comments","time":{"start":1658401432549,"stop":1658401432689,"duration":140},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm new rule","time":{"start":1658401432689,"stop":1658401435808,"duration":3119},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Filter rules table by name","time":{"start":1658401437810,"stop":1658401438145,"duration":335},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401437810,"stop":1658401437837,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get first rule in table","time":{"start":1658401439147,"stop":1658401439317,"duration":170},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Expand Rules Console Navbar","time":{"start":1658401439354,"stop":1658401439427,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658401439431,"stop":1658401439573,"duration":142},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401439866,"stop":1658401439994,"duration":128},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Watchlist Name","time":{"start":1658401440099,"stop":1658401440256,"duration":157},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'TWL_tc_rs_wl_Txn Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Watchlist Type","time":{"start":1658401440256,"stop":1658401440347,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'IP Address'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value to edit #\"1\"","time":{"start":1658401440348,"stop":1658401440348,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"number","value":"1"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Value option dropdown: \"'IP Address:'\"","time":{"start":1658401440348,"stop":1658401440501,"duration":153},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658401440348,"stop":1658401440407,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f5b7ede8790>, 'IP Address:')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter input value: \"'127.5.5.99'\"","time":{"start":1658401440501,"stop":1658401440845,"duration":344},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658401440501,"stop":1658401440517,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter IPv4 input","time":{"start":1658401440544,"stop":1658401440845,"duration":301},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c2505970919d2e037319c10bb8adbabc\", element=\"8de45b50-463d-4eb5-8e2d-5c7bdff7fec6\")>"},{"name":"ip_addr","value":"'127.5.5.99'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f5b7ede8790>, '127.5.5.99')"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658401440845,"stop":1658401440853,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"decision_value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter Comments","time":{"start":1658401440853,"stop":1658401441018,"duration":165},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm create watchlist","time":{"start":1658401441018,"stop":1658401441100,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401443132,"stop":1658401443161,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658401444424,"stop":1658401444595,"duration":171},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658401444449,"stop":1658401444538,"duration":89},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Activate Watchlist","time":{"start":1658401444799,"stop":1658401446356,"duration":1557},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get Watchlist Status","time":{"start":1658401446356,"stop":1658401446393,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Send test transaction","time":{"start":1658401446393,"stop":1658401446987,"duration":594},"status":"passed","steps":[],"attachments":[{"uid":"493bae32e83f5a22","name":"Transaction payload details","source":"493bae32e83f5a22.txt","type":"text/plain","size":1341},{"uid":"f1c040c38f997142","name":"Transaction response details","source":"f1c040c38f997142.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401446987,"stop":1658401446988,"duration":1},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401446988,"stop":1658401446988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401446988,"stop":1658401447578,"duration":590},"status":"passed","steps":[],"attachments":[{"uid":"78b3db2d123a9688","name":"Transaction payload details","source":"78b3db2d123a9688.txt","type":"text/plain","size":1341},{"uid":"3df782ec1436b700","name":"Transaction response details","source":"3df782ec1436b700.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '3'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401447578,"stop":1658401447578,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401447578,"stop":1658401447578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401447578,"stop":1658401448175,"duration":597},"status":"passed","steps":[],"attachments":[{"uid":"1cbf6c4d8011e027","name":"Transaction payload details","source":"1cbf6c4d8011e027.txt","type":"text/plain","size":1341},{"uid":"542cd745de2cb474","name":"Transaction response details","source":"542cd745de2cb474.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '3'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401448175,"stop":1658401448175,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401448175,"stop":1658401448175,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401448175,"stop":1658401448810,"duration":635},"status":"passed","steps":[],"attachments":[{"uid":"3766ecd3141aa6bf","name":"Transaction payload details","source":"3766ecd3141aa6bf.txt","type":"text/plain","size":1341},{"uid":"409011fa5a8a8ac8","name":"Transaction response details","source":"409011fa5a8a8ac8.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '3'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401448810,"stop":1658401448810,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401448810,"stop":1658401448810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401448810,"stop":1658401449441,"duration":631},"status":"passed","steps":[],"attachments":[{"uid":"9b657ac23466c09a","name":"Transaction payload details","source":"9b657ac23466c09a.txt","type":"text/plain","size":1341},{"uid":"cef75ff22bbbba18","name":"Transaction response details","source":"cef75ff22bbbba18.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '3'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401449441,"stop":1658401449442,"duration":1},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401449441,"stop":1658401449442,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401449442,"stop":1658401450074,"duration":632},"status":"passed","steps":[],"attachments":[{"uid":"205b579039883aad","name":"Transaction payload details","source":"205b579039883aad.txt","type":"text/plain","size":1341},{"uid":"e387d80cb8b23864","name":"Transaction response details","source":"e387d80cb8b23864.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '3'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401450075,"stop":1658401450075,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401450075,"stop":1658401450075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': '', 'sendforauth': 1, 'sendforreview': 0}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401450075,"stop":1658401450736,"duration":661},"status":"passed","steps":[],"attachments":[{"uid":"f78b35fb66518a4b","name":"Transaction payload details","source":"f78b35fb66518a4b.txt","type":"text/plain","size":1345},{"uid":"6355b7873db4bb14","name":"Transaction response details","source":"6355b7873db4bb14.txt","type":"text/plain","size":140}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-000', 'merch_name': 'test-automation-base', 'merch_cat_code': '5732', 'merch_group_id': '54321', 'ISO_MTI': '0110', 'pos_entry_mode': '01', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.1.1', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'tc_rs_wl@test.com', 'cc_firstname': 'tony', 'cc_lastname': 'stark', 'cc_bin': '555555', 'cc_last4': '4444', 'cc_last_digits': '4444', 'cc_hash': '2f725bbd1f405a1ed0336abaf85ddfeb6902a9984a76fd877c3b5cc3b5085a82', 'cc_exp_date': '0226', 'billing_firstname': 'tony', 'billing_lastname': 'stark', 'billing_address': 'Malibu Point', 'billing_state': 'California', 'billing_country_alpha2': 'US', 'billing_postal_code': '10880', 'billing_currency': 'USD', 'billing_amt': '1000', 'transaction_channel': '6', 'transaction_id_ext': 'tt_tc_rs_wl_Txn Count', 'transaction_id_merch': '321'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401450736,"stop":1658401450737,"duration":1},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 51, in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[{"name":"Assert transaction is scored","time":{"start":1658401450736,"stop":1658401450736,"duration":0},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None, 'sendforauth': 0, 'sendforreview': 1}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"579761e4c9825c87","name":"ec5a59d9-0204-4133-b021-cd5001f250b1-attachment.png","source":"579761e4c9825c87.png","type":"image/png","size":77338}],"parameters":[],"stepsCount":61,"attachmentsCount":15,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"cleanup_watchlists::0","time":{"start":1658401450855,"stop":1658401455729,"duration":4874},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401450858,"stop":1658401450944,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658401450944,"stop":1658401451063,"duration":119},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401453334,"stop":1658401453364,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658401454679,"stop":1658401454855,"duration":176},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658401454698,"stop":1658401454801,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Delete Watchlist","time":{"start":1658401454979,"stop":1658401455312,"duration":333},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Confirm Delete Watchlist","time":{"start":1658401455312,"stop":1658401455578,"duration":266},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"cleanup_smart_rules::0","time":{"start":1658401455730,"stop":1658401459993,"duration":4263},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401455733,"stop":1658401455837,"duration":104},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658401455838,"stop":1658401455930,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Filter rules table by name","time":{"start":1658401458148,"stop":1658401458538,"duration":390},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401458148,"stop":1658401458193,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get first rule in table","time":{"start":1658401459540,"stop":1658401459732,"duration":192},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click delete rule","time":{"start":1658401459732,"stop":1658401459835,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click confirm delete rule","time":{"start":1658401459835,"stop":1658401459946,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"fw_api_all::0","time":{"start":1658401459993,"stop":1658401459994,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login::0","time":{"start":1658401459995,"stop":1658401459995,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout::0","time":{"start":1658401490168,"stop":1658401490307,"duration":139},"status":"passed","steps":[{"name":"Click Logout","time":{"start":1658401490263,"stop":1658401490306,"duration":43},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: headless chrome=103.0.5060.114)\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/fw/pages/top_navbar_page.py\", line 22, in click_logout\n    logout_btn.click()\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"browser::0","time":{"start":1658401490308,"stop":1658401490367,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('check_known_issues')"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.end2end.rules_console.dynamic_rule_behaviour"},{"name":"suite","value":"test_txn_count_rule_sum_blocked"},{"name":"subSuite","value":"TestTxnCountRuleSumBlocked"},{"name":"host","value":"ip-10-20-30-10"},{"name":"thread","value":"27377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.end2end.rules_console.dynamic_rule_behaviour.test_txn_count_rule_sum_blocked"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"api_version","value":"'3'"},{"name":"browser","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('check_known_issues')","regression"]},"source":"825138abd2e0b4f0.json","parameterValues":["'3'","'chrome'"]}