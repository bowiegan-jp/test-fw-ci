{"uid":"a9f92fe0ba0bc98a","name":"Dynamic Rule Sum Transaction Count - Blocked by Watchlist","fullName":"tests.end2end.rules_console.dynamic_rule_behaviour.test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked#test_txn_count_watchlist","historyId":"22a4d5d2861b73151f811b257cae308d","time":{"start":1658401399722,"stop":1658401420685,"duration":20963},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked object at 0x7f5b7ea7be90>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f5b7eac6650>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f5b7e775dd0>\ncleanup_smart_rules = ['t_tc_rs_wl_Txn Count']\ncleanup_watchlists = ['TWL_tc_rs_wl_Txn Count']\n\n    @allure.title(\"Dynamic Rule Sum Transaction Count - Blocked by Watchlist\")\n    def test_txn_count_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'tc_rs_wl_{self._get_dynamic_velocity_abbrev(\"Transaction Count\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'tc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Transaction Count\")\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments(TEST_COMMENT)\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(TEST_THRESHOLD + 1):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        transaction.update({\n            \"user_email\": TEST_EMAIL\n        })\n        wl_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        wl_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        wl_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP\n        })\n    \n        # First N-2 Txns should pass without hitting the dynamic rule\n        for _ in range(TEST_THRESHOLD - 2):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_txn_count_rule_sum_blocked.py:380: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cfg","time":{"start":1658399575670,"stop":1658399575670,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1658399575671,"stop":1658399575671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1658401124434,"stop":1658401125861,"duration":1427},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout","time":{"start":1658401125861,"stop":1658401125862,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"check_known_issues","time":{"start":1658401399628,"stop":1658401399628,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login","time":{"start":1658401399628,"stop":1658401399720,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"txn_samples","time":{"start":1658401399720,"stop":1658401399720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_version","time":{"start":1658401399721,"stop":1658401399721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_watchlists","time":{"start":1658401399721,"stop":1658401399721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"fw_api_all","time":{"start":1658401399721,"stop":1658401399721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_smart_rules","time":{"start":1658401399721,"stop":1658401399721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked object at 0x7f5b7ea7be90>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f5b7eac6650>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f5b7e775dd0>\ncleanup_smart_rules = ['t_tc_rs_wl_Txn Count']\ncleanup_watchlists = ['TWL_tc_rs_wl_Txn Count']\n\n    @allure.title(\"Dynamic Rule Sum Transaction Count - Blocked by Watchlist\")\n    def test_txn_count_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'tc_rs_wl_{self._get_dynamic_velocity_abbrev(\"Transaction Count\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'tc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Transaction Count\")\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments(TEST_COMMENT)\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(TEST_THRESHOLD + 1):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        transaction.update({\n            \"user_email\": TEST_EMAIL\n        })\n        wl_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        wl_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        wl_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP\n        })\n    \n        # First N-2 Txns should pass without hitting the dynamic rule\n        for _ in range(TEST_THRESHOLD - 2):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_txn_count_rule_sum_blocked.py:380: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401399724,"stop":1658401399955,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658401400179,"stop":1658401400331,"duration":152},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Add New Rule","time":{"start":1658401400339,"stop":1658401400736,"duration":397},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401400339,"stop":1658401400644,"duration":305},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Tick Activate Rule upon save","time":{"start":1658401400736,"stop":1658401400802,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Fill in Rule Name","time":{"start":1658401400802,"stop":1658401400932,"duration":130},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select static condition from dropdown: 'Email'","time":{"start":1658401400932,"stop":1658401401040,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"field","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select condition option from dropdown: 'Matches'","time":{"start":1658401401041,"stop":1658401401142,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"opt","value":"'Matches'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value type from dropdown: 'Email:'","time":{"start":1658401401142,"stop":1658401401279,"duration":137},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email:'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in value input: 'tc_rs_wl@test.com'","time":{"start":1658401401280,"stop":1658401401938,"duration":658},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'tc_rs_wl@test.com'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658401401938,"stop":1658401401943,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Add dynamic condition","time":{"start":1658401401943,"stop":1658401402019,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Select dynamic velocity type: 'Transaction Count'","time":{"start":1658401402019,"stop":1658401402129,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Transaction Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic treshold: 5","time":{"start":1658401402129,"stop":1658401402232,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"5"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic condition value","time":{"start":1658401402232,"stop":1658401402340,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"3"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select dynamic group by condition: 'Email'","time":{"start":1658401402340,"stop":1658401402612,"duration":272},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in comments","time":{"start":1658401402612,"stop":1658401402754,"duration":142},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm new rule","time":{"start":1658401402754,"stop":1658401405879,"duration":3125},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Filter rules table by name","time":{"start":1658401407882,"stop":1658401408212,"duration":330},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658401407882,"stop":1658401407910,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get first rule in table","time":{"start":1658401409213,"stop":1658401409314,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Expand Rules Console Navbar","time":{"start":1658401409337,"stop":1658401409377,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658401409382,"stop":1658401409490,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401409756,"stop":1658401409860,"duration":104},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Watchlist Name","time":{"start":1658401409983,"stop":1658401410141,"duration":158},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'TWL_tc_rs_wl_Txn Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Watchlist Type","time":{"start":1658401410141,"stop":1658401410225,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'IP Address'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value to edit #\"1\"","time":{"start":1658401410225,"stop":1658401410225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"number","value":"1"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Value option dropdown: \"'IP Address:'\"","time":{"start":1658401410225,"stop":1658401410368,"duration":143},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658401410225,"stop":1658401410252,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f5b7e98d610>, 'IP Address:')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter input value: \"'127.5.5.99'\"","time":{"start":1658401410368,"stop":1658401410742,"duration":374},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658401410368,"stop":1658401410383,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter IPv4 input","time":{"start":1658401410413,"stop":1658401410742,"duration":329},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"c2505970919d2e037319c10bb8adbabc\", element=\"65c42752-187f-480c-8755-ca8ccdd1cc3b\")>"},{"name":"ip_addr","value":"'127.5.5.99'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f5b7e98d610>, '127.5.5.99')"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658401410742,"stop":1658401410747,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"decision_value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter Comments","time":{"start":1658401410747,"stop":1658401410947,"duration":200},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm create watchlist","time":{"start":1658401410948,"stop":1658401411025,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401413058,"stop":1658401413089,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658401414398,"stop":1658401414576,"duration":178},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658401414424,"stop":1658401414520,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Activate Watchlist","time":{"start":1658401414798,"stop":1658401416405,"duration":1607},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get Watchlist Status","time":{"start":1658401416405,"stop":1658401416444,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Send test transaction","time":{"start":1658401416444,"stop":1658401417028,"duration":584},"status":"passed","steps":[],"attachments":[{"uid":"363ede5bb1cce681","name":"Transaction payload details","source":"363ede5bb1cce681.txt","type":"text/plain","size":1341},{"uid":"309301fb75bd6698","name":"Transaction response details","source":"309301fb75bd6698.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '4'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401417028,"stop":1658401417028,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401417028,"stop":1658401417028,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401417028,"stop":1658401417628,"duration":600},"status":"passed","steps":[],"attachments":[{"uid":"f1d0cbc9c4e8ef05","name":"Transaction payload details","source":"f1d0cbc9c4e8ef05.txt","type":"text/plain","size":1341},{"uid":"76834e0cdf2a1e48","name":"Transaction response details","source":"76834e0cdf2a1e48.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401417629,"stop":1658401417629,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401417629,"stop":1658401417629,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401417629,"stop":1658401418223,"duration":594},"status":"passed","steps":[],"attachments":[{"uid":"ef502808d43fd26e","name":"Transaction payload details","source":"ef502808d43fd26e.txt","type":"text/plain","size":1341},{"uid":"5a9c88ca33480024","name":"Transaction response details","source":"5a9c88ca33480024.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401418223,"stop":1658401418224,"duration":1},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401418224,"stop":1658401418224,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401418224,"stop":1658401418815,"duration":591},"status":"passed","steps":[],"attachments":[{"uid":"684385be56911a8d","name":"Transaction payload details","source":"684385be56911a8d.txt","type":"text/plain","size":1341},{"uid":"1d9c68b7d23172c7","name":"Transaction response details","source":"1d9c68b7d23172c7.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401418815,"stop":1658401418815,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401418815,"stop":1658401418815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401418815,"stop":1658401419400,"duration":585},"status":"passed","steps":[],"attachments":[{"uid":"eb9603855dd9369b","name":"Transaction payload details","source":"eb9603855dd9369b.txt","type":"text/plain","size":1341},{"uid":"680ca34d01207c9c","name":"Transaction response details","source":"680ca34d01207c9c.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401419400,"stop":1658401419400,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401419400,"stop":1658401419400,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401419400,"stop":1658401420020,"duration":620},"status":"passed","steps":[],"attachments":[{"uid":"4d9f0f360b66eb55","name":"Transaction payload details","source":"4d9f0f360b66eb55.txt","type":"text/plain","size":1341},{"uid":"19b541afef4474e9","name":"Transaction response details","source":"19b541afef4474e9.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401420021,"stop":1658401420021,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658401420021,"stop":1658401420021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658401420021,"stop":1658401420684,"duration":663},"status":"passed","steps":[],"attachments":[{"uid":"3262c8399a9906f7","name":"Transaction payload details","source":"3262c8399a9906f7.txt","type":"text/plain","size":1345},{"uid":"d4444572c4d08bcb","name":"Transaction response details","source":"d4444572c4d08bcb.txt","type":"text/plain","size":100}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-000', 'merch_name': 'test-automation-base', 'merch_cat_code': '5732', 'merch_group_id': '54321', 'ISO_MTI': '0110', 'pos_entry_mode': '01', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.1.1', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'tc_rs_wl@test.com', 'cc_firstname': 'tony', 'cc_lastname': 'stark', 'cc_bin': '555555', 'cc_last4': '4444', 'cc_last_digits': '4444', 'cc_hash': '2f725bbd1f405a1ed0336abaf85ddfeb6902a9984a76fd877c3b5cc3b5085a82', 'cc_exp_date': '0226', 'billing_firstname': 'tony', 'billing_lastname': 'stark', 'billing_address': 'Malibu Point', 'billing_state': 'California', 'billing_country_alpha2': 'US', 'billing_postal_code': '10880', 'billing_currency': 'USD', 'billing_amt': '1000', 'transaction_channel': '1', 'transaction_id_ext': 'tt_tc_rs_wl_Txn Count', 'transaction_id_merch': '321'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658401420684,"stop":1658401420684,"duration":0},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 51, in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[{"name":"Assert transaction is scored","time":{"start":1658401420684,"stop":1658401420684,"duration":0},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"51e6afcd46fe27fd","name":"c5c07db7-bcc9-4997-8681-b0c36ebf4e64-attachment.png","source":"51e6afcd46fe27fd.png","type":"image/png","size":77338},{"uid":"5ad43ab80c2c939a","name":"log","source":"5ad43ab80c2c939a.txt","type":"text/plain","size":82}],"parameters":[],"stepsCount":61,"attachmentsCount":16,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"cleanup_watchlists::0","time":{"start":1658401420800,"stop":1658401426060,"duration":5260},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401420801,"stop":1658401420862,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658401420864,"stop":1658401420997,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658401423282,"stop":1658401423331,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658401424676,"stop":1658401424822,"duration":146},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658401424693,"stop":1658401424774,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Delete Watchlist","time":{"start":1658401424942,"stop":1658401425722,"duration":780},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Confirm Delete Watchlist","time":{"start":1658401425722,"stop":1658401425926,"duration":204},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"cleanup_smart_rules::0","time":{"start":1658401426061,"stop":1658401429350,"duration":3289},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658401426062,"stop":1658401426198,"duration":136},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658401426198,"stop":1658401429349,"duration":3151},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/fw/pages/side_bar_page.py\", line 30, in click_smart_rules\n    self.get_element(self.SMART_RULES).click()\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/base_page.py\", line 36, in get_element\n    .until(EC.visibility_of_element_located(locator))\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/support/wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"fw_api_all::0","time":{"start":1658401429351,"stop":1658401429351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login::0","time":{"start":1658401429352,"stop":1658401429352,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout::0","time":{"start":1658401490168,"stop":1658401490307,"duration":139},"status":"passed","steps":[{"name":"Click Logout","time":{"start":1658401490263,"stop":1658401490306,"duration":43},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: element has zero size\n  (Session info: headless chrome=103.0.5060.114)\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/fw/pages/top_navbar_page.py\", line 22, in click_logout\n    logout_btn.click()\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"browser::0","time":{"start":1658401490308,"stop":1658401490367,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('check_known_issues')"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.end2end.rules_console.dynamic_rule_behaviour"},{"name":"suite","value":"test_txn_count_rule_sum_blocked"},{"name":"subSuite","value":"TestTxnCountRuleSumBlocked"},{"name":"host","value":"ip-10-20-30-10"},{"name":"thread","value":"27377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.end2end.rules_console.dynamic_rule_behaviour.test_txn_count_rule_sum_blocked"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"api_version","value":"'2'"},{"name":"browser","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('check_known_issues')","regression"]},"source":"a9f92fe0ba0bc98a.json","parameterValues":["'2'","'chrome'"]}