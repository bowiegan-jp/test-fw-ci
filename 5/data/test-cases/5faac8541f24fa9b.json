{"uid":"5faac8541f24fa9b","name":"test_incolumn_filters[chrome-MCC]","fullName":"tests.ui.transaction_logs.test_columns.TestTxnUIColumns#test_incolumn_filters","historyId":"ac405cb2ae5ccaeafcc5bf06e3728d68","time":{"start":1660097186454,"stop":1660097195341,"duration":8887},"status":"failed","statusMessage":"AssertionError: assert '5732' == None\n  +'5732'\n  -None","statusTrace":"self = <test_columns.TestTxnUIColumns object at 0x7f8cfea5af90>, column = 'MCC'\nfw_api = <fw.api.client.FraudwallAPI object at 0x7f8cfeb5e350>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f8cfea02a90>\n\n    @pytest.mark.regression\n    @pytest.mark.parametrize('column', COLUMNS_W_FILTER.keys())\n    def test_incolumn_filters(self, column, fw_api, txn_samples):\n        UNIQUE_TXN_ID = f'{column}_{self.current_timestr}'\n    \n        # Make sure toggle selected\n        txn_page = TransactionLogsPage(self.driver)\n        toggle = txn_page.toggle_column(column, True)\n        assert toggle.is_selected()\n        # Compulsory column needed to identify txn sent by this test\n        toggle = txn_page.toggle_column(\"Txn ID\", True)\n        assert toggle.is_selected()\n    \n        # send txn\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': UNIQUE_TXN_ID,\n        })\n        transaction.update(COLUMN_TEST_TXN_EXTRA_DATA)\n    \n        txn_resp = fw_api.send_transaction(transaction)\n    \n        # Filter to txn\n        field_name = COLUMNS_W_FILTER.get(column)\n        if field_name in COLUMN_TEST_DYNAMIC_FIELDS_DATA.keys():\n            # Some fields do not show up as sent to fraudwall\n            # May be subject to post processing (example: country/proxy type)\n            display_value = COLUMN_TEST_DYNAMIC_FIELDS_DATA.get(field_name)\n        else:\n            display_value = transaction.get(field_name)\n    \n        txn_page.enter_incolumn_filter(column, field_name, display_value)\n        # Use Txn ID as unique identifier for test\n        if column != 'Txn ID':\n            txn_page.enter_txn_id_filter(UNIQUE_TXN_ID)\n        txn_page.click_submit_search()\n    \n        # assert txn seen\n        test_txn = txn_page.get_first_transaction()\n        assert test_txn.get_txn_id() == UNIQUE_TXN_ID\n>       assert test_txn.get_item_by_header(column) == COLUMN_TEST_DYNAMIC_FIELDS_DATA.get(field_name)\nE       AssertionError: assert '5732' == None\nE         +'5732'\nE         -None\n\ntests/ui/transaction_logs/test_columns.py:72: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cfg","time":{"start":1660097080587,"stop":1660097080587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1660097082902,"stop":1660097082902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1660097115010,"stop":1660097116386,"duration":1376},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout","time":{"start":1660097116386,"stop":1660097116386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"check_known_issues","time":{"start":1660097186390,"stop":1660097186390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login","time":{"start":1660097186391,"stop":1660097186453,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"fw_api","time":{"start":1660097186453,"stop":1660097186453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"txn_samples","time":{"start":1660097186453,"stop":1660097186453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '5732' == None\n  +'5732'\n  -None","statusTrace":"self = <test_columns.TestTxnUIColumns object at 0x7f8cfea5af90>, column = 'MCC'\nfw_api = <fw.api.client.FraudwallAPI object at 0x7f8cfeb5e350>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f8cfea02a90>\n\n    @pytest.mark.regression\n    @pytest.mark.parametrize('column', COLUMNS_W_FILTER.keys())\n    def test_incolumn_filters(self, column, fw_api, txn_samples):\n        UNIQUE_TXN_ID = f'{column}_{self.current_timestr}'\n    \n        # Make sure toggle selected\n        txn_page = TransactionLogsPage(self.driver)\n        toggle = txn_page.toggle_column(column, True)\n        assert toggle.is_selected()\n        # Compulsory column needed to identify txn sent by this test\n        toggle = txn_page.toggle_column(\"Txn ID\", True)\n        assert toggle.is_selected()\n    \n        # send txn\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': UNIQUE_TXN_ID,\n        })\n        transaction.update(COLUMN_TEST_TXN_EXTRA_DATA)\n    \n        txn_resp = fw_api.send_transaction(transaction)\n    \n        # Filter to txn\n        field_name = COLUMNS_W_FILTER.get(column)\n        if field_name in COLUMN_TEST_DYNAMIC_FIELDS_DATA.keys():\n            # Some fields do not show up as sent to fraudwall\n            # May be subject to post processing (example: country/proxy type)\n            display_value = COLUMN_TEST_DYNAMIC_FIELDS_DATA.get(field_name)\n        else:\n            display_value = transaction.get(field_name)\n    \n        txn_page.enter_incolumn_filter(column, field_name, display_value)\n        # Use Txn ID as unique identifier for test\n        if column != 'Txn ID':\n            txn_page.enter_txn_id_filter(UNIQUE_TXN_ID)\n        txn_page.click_submit_search()\n    \n        # assert txn seen\n        test_txn = txn_page.get_first_transaction()\n        assert test_txn.get_txn_id() == UNIQUE_TXN_ID\n>       assert test_txn.get_item_by_header(column) == COLUMN_TEST_DYNAMIC_FIELDS_DATA.get(field_name)\nE       AssertionError: assert '5732' == None\nE         +'5732'\nE         -None\n\ntests/ui/transaction_logs/test_columns.py:72: AssertionError","steps":[{"name":"Send test transaction","time":{"start":1660097187685,"stop":1660097188336,"duration":651},"status":"passed","steps":[],"attachments":[{"uid":"f4156481a260550f","name":"Transaction payload details","source":"f4156481a260550f.txt","type":"text/plain","size":1434},{"uid":"d0cbb380b205c184","name":"Transaction response details","source":"d0cbb380b205c184.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-000', 'merch_name': 'test-automation-base', 'merch_cat_code': '5732', 'merch_group_id': '54321', 'ISO_MTI': '0110', 'pos_entry_mode': '01', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '8.8.8.8', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'tony_stark@test.com', 'cc_firstname': 'tony', 'cc_lastname': 'stark', 'cc_bin': '555555', 'cc_last4': '4444', 'cc_last_digits': '4444', 'cc_hash': '2f725bbd1f405a1ed0336abaf85ddfeb6902a9984a76fd877c3b5cc3b5085a82', 'cc_exp_date': '0226', 'billing_firstname': 'tony', 'billing_lastname': 'stark', 'billing_address': 'Malibu Point', 'billing_state': 'California', 'billing_country_alpha2': 'US', 'billing_postal_code': '10880', 'billing_currency': 'USD', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'MCC_20220810_020626', 'transaction_id_merch': '321', 'device_loclat': '1.290270', 'device_loclng': '103.851959', 'device_info': 'test_info'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter Txn ID filer: 'MCC_20220810_020626'","time":{"start":1660097189995,"stop":1660097190804,"duration":809},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'MCC_20220810_020626'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get Txn ID","time":{"start":1660097194794,"stop":1660097195062,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"2b2d3bc89885d538","name":"1a7991d4-ca56-49ef-9607-0a6eb404e065-attachment.png","source":"2b2d3bc89885d538.png","type":"image/png","size":67575}],"parameters":[],"stepsCount":3,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"fw_api::0","time":{"start":1660097195419,"stop":1660097195419,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login::0","time":{"start":1660097195420,"stop":1660097195420,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout::0","time":{"start":1660097305636,"stop":1660097305826,"duration":190},"status":"passed","steps":[{"name":"Click Logout","time":{"start":1660097305711,"stop":1660097305813,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"browser::0","time":{"start":1660097305828,"stop":1660097305886,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"@pytest.mark.usefixtures('check_known_issues')"},{"name":"parentSuite","value":"tests.ui.transaction_logs"},{"name":"suite","value":"test_columns"},{"name":"subSuite","value":"TestTxnUIColumns"},{"name":"host","value":"ip-10-20-30-10"},{"name":"thread","value":"4033-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.transaction_logs.test_columns"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"column","value":"'MCC'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"f37427cc77096c6a","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/4//#testresult/f37427cc77096c6a","status":"broken","statusDetails":"selenium.common.exceptions.JavascriptException: Message: javascript error: Y is not defined\n  (Session info: headless chrome=104.0.5112.79)","time":{"start":1660096486479,"stop":1660096491994,"duration":5515}},{"uid":"f18a3d9c974085c9","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/3//#testresult/f18a3d9c974085c9","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btn-inline js...TxnLogFilters\" id=\"searchSubmitBtn\">Submit</button> is not clickable at point (365, 15). Other element would receive the click: <li class=\"last-session-container\" role=\"menuitem\">...</li>\n  (Session info: headless chrome=104.0.5112.79)","time":{"start":1660048510846,"stop":1660048517312,"duration":6466}},{"uid":"17ac976fb2ab4f90","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/5//#testresult/17ac976fb2ab4f90","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btn-inline js...TxnLogFilters\" id=\"searchSubmitBtn\">Submit</button> is not clickable at point (365, 9). Other element would receive the click: <li class=\"last-session-container\" role=\"menuitem\">...</li>\n  (Session info: headless chrome=104.0.5112.79)","time":{"start":1660043061372,"stop":1660043067760,"duration":6388}},{"uid":"7f523f126a70be4b","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/4//#testresult/7f523f126a70be4b","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: headless chrome=104.0.5112.79)","time":{"start":1660032457419,"stop":1660032457419,"duration":0}},{"uid":"99cbbd8362175a01","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/1//#testresult/99cbbd8362175a01","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btn-inline js...TxnLogFilters\" id=\"searchSubmitBtn\">Submit</button> is not clickable at point (365, 10). Other element would receive the click: <li class=\"last-session-container\" role=\"menuitem\">...</li>\n  (Session info: headless chrome=103.0.5060.114)","time":{"start":1658485539528,"stop":1658485546012,"duration":6484}}]},"tags":["@pytest.mark.usefixtures('check_known_issues')","regression"]},"source":"5faac8541f24fa9b.json","parameterValues":["'chrome'","'MCC'"]}