{"uid":"6f1f25748d50d6e7","name":"Dynamic Rule Sum Transaction Count - Blocked by Watchlist","fullName":"tests.end2end.rules_console.dynamic_rule_behaviour.test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked#test_txn_count_watchlist","historyId":"22a4d5d2861b73151f811b257cae308d","time":{"start":1658484258398,"stop":1658484280268,"duration":21870},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked object at 0x7f398faad9d0>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f398fb4f950>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f398f78e3d0>\ncleanup_smart_rules = ['t_tc_rs_wl_Txn Count']\ncleanup_watchlists = ['TWL_tc_rs_wl_Txn Count']\n\n    @allure.title(\"Dynamic Rule Sum Transaction Count - Blocked by Watchlist\")\n    def test_txn_count_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'tc_rs_wl_{self._get_dynamic_velocity_abbrev(\"Transaction Count\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'tc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Transaction Count\")\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments(TEST_COMMENT)\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(TEST_THRESHOLD + 1):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        transaction.update({\n            \"user_email\": TEST_EMAIL\n        })\n        wl_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        wl_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        wl_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP\n        })\n    \n        # First N-2 Txns should pass without hitting the dynamic rule\n        for _ in range(TEST_THRESHOLD - 2):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_txn_count_rule_sum_blocked.py:380: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cfg","time":{"start":1658475055993,"stop":1658475055993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1658475055994,"stop":1658475055994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1658483980154,"stop":1658483981765,"duration":1611},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout","time":{"start":1658483981766,"stop":1658483981766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"check_known_issues","time":{"start":1658484258337,"stop":1658484258337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login","time":{"start":1658484258337,"stop":1658484258396,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"fw_api_all","time":{"start":1658484258397,"stop":1658484258397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_version","time":{"start":1658484258397,"stop":1658484258397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_smart_rules","time":{"start":1658484258397,"stop":1658484258397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"txn_samples","time":{"start":1658484258397,"stop":1658484258397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"cleanup_watchlists","time":{"start":1658484258398,"stop":1658484258398,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}","statusTrace":"fw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n>           assert 299 >= fw_response['code'] >= 200\nE           AssertionError\n\nutils/asserts/fraudwall_response.py:9: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_txn_count_rule_sum_blocked.TestTxnCountRuleSumBlocked object at 0x7f398faad9d0>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f398fb4f950>\nfw_api_all = <fw.api.client.FraudwallAPI object at 0x7f398f78e3d0>\ncleanup_smart_rules = ['t_tc_rs_wl_Txn Count']\ncleanup_watchlists = ['TWL_tc_rs_wl_Txn Count']\n\n    @allure.title(\"Dynamic Rule Sum Transaction Count - Blocked by Watchlist\")\n    def test_txn_count_watchlist(self, txn_samples, fw_api_all, cleanup_smart_rules, cleanup_watchlists):\n        # Generate unique test name with timestamp\n        UNIQUE_INDENTIFIER = f'tc_rs_wl_{self._get_dynamic_velocity_abbrev(\"Transaction Count\")}'\n        TEST_RULE_NAME = f't_{UNIQUE_INDENTIFIER}'\n        TEST_WATCHLIST_NAME = f\"TWL_{UNIQUE_INDENTIFIER}\"\n        TEST_THRESHOLD = 5\n        WATCHLIST_IP = \"127.5.5.99\"\n        TEST_EMAIL = 'tc_rs_wl@test.com'\n        TEST_COMMENT = 'test automation rule (delete me)'\n    \n        # Post Test Cleanup\n        cleanup_smart_rules.append(TEST_RULE_NAME)\n        cleanup_watchlists.append(TEST_WATCHLIST_NAME)\n    \n        # Navigate to Smart Rules\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Smart Rules.\"):\n            smartrules_page = side_navbar.click_smart_rules()\n    \n        # Create Dynamic Smart Rule\n        create_rule_page = smartrules_page.click_add_new_rule()\n        create_rule_page.tick_active_rule_upon_save()\n        create_rule_page.enter_name(TEST_RULE_NAME)\n        create_rule_page.select_static_condition_field('Email')\n        create_rule_page.select_static_condition_opt('Matches')\n        create_rule_page.select_static_condition_value('Email:')\n        create_rule_page.enter_static_condition_value(TEST_EMAIL)\n        create_rule_page.select_decision('block')\n        create_rule_page.click_add_dynamic_condition()\n        create_rule_page.select_dynamic_cond_velocity_type(\"Transaction Count\")\n        create_rule_page.enter_dynamic_cond_threshold(TEST_THRESHOLD)\n        create_rule_page.enter_dynamic_cond_duration(3)  # days\n        create_rule_page.select_dynamic_cond_group_by('Email')\n        create_rule_page.enter_comments(TEST_COMMENT)\n        smartrules_page = create_rule_page.click_confirm()\n    \n        # Check Smart Rule\n        smartrules_page.enter_rules_filter_name(TEST_RULE_NAME)\n        rule = smartrules_page.get_first_rule()\n        assert rule.get_name() == TEST_RULE_NAME\n    \n        # Navigate to Watchlist\n        side_navbar = SideBarPage(self.driver)\n        side_navbar.expand_rules_console()\n        with url_change(side_navbar, fail_message=\"Failed to navigate to Watchlist\"):\n            watchlist_page = side_navbar.click_watchlist_rules()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Create Watchlist\n        create_watchlist_form = watchlist_page.click_add_new_watchlist()\n        create_watchlist_form.enter_name(TEST_WATCHLIST_NAME)\n        create_watchlist_form.select_watchlist_type(\"IP Address\")\n        create_watchlist_form.select_value_fieldset_to_edit(1)\n        create_watchlist_form.select_value_option(\"IP Address:\")\n        create_watchlist_form.enter_value(WATCHLIST_IP)\n        create_watchlist_form.select_decision('block')\n        create_watchlist_form.enter_comments(TEST_COMMENT)\n        watchlist_page = create_watchlist_form.click_confirm()\n    \n        assert watchlist_page.get_page_header() == \"Watchlist Rules\"\n    \n        # Check Watchlist created\n        watchlist_page.enter_watchlist_filter_name(TEST_WATCHLIST_NAME)\n        watchlist = watchlist_page.get_first_watchlist()\n        assert watchlist.get_name() == TEST_WATCHLIST_NAME\n        assert watchlist.get_status() == \"Inactive\"\n        assert watchlist.get_decision() == \"block\"\n        # Activate Watchlist\n        details_page = watchlist.click_details()\n        details_page.click_activate()\n        assert details_page.get_status() == \"This watchlist is active.\"\n    \n        # Send & verify Vanilla transaction\n        vanilla_txn = txn_samples.VANILLA\n        for _ in range(TEST_THRESHOLD + 1):\n            vanilla_resp = fw_api_all.send_transaction(vanilla_txn)\n            assert_txn_matches_decision(vanilla_resp, 'score', TEST_RULE_NAME)  # vanilla transaction should not be blocked by rule\n    \n        # Send Test transaction\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        transaction.update({\n            \"user_email\": TEST_EMAIL\n        })\n        wl_transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        wl_transaction.update({\n            'transaction_id_ext': f'tt_{UNIQUE_INDENTIFIER}',\n            'transaction_channel': self.get_random_txn_channel()\n        })\n        wl_transaction.update({\n            \"user_email\": TEST_EMAIL,\n            \"user_ipv4\": WATCHLIST_IP\n        })\n    \n        # First N-2 Txns should pass without hitting the dynamic rule\n        for _ in range(TEST_THRESHOLD - 2):\n>           assert_txn_matches_decision(fw_api_all.send_transaction(transaction), 'score', TEST_RULE_NAME)\n\ntests/end2end/rules_console/dynamic_rule_behaviour/test_txn_count_rule_sum_blocked.py:380: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/asserts/fraudwall_response.py:51: in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfw_response = {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\nscore_expectation = ''\n\n    @allure.step(\"Assert transaction is scored\")\n    def assert_txn_scored(fw_response, score_expectation=''):\n        try:\n            assert 299 >= fw_response['code'] >= 200\n            assert fw_response['decline_rule'] is None\n            assert not fw_response['error']\n            if score_expectation:\n                assert fw_response['score_reason'] == score_expectation\n        except AssertionError:\n>           raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\nE           AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n\nutils/asserts/fraudwall_response.py:15: AssertionError","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658484258400,"stop":1658484258767,"duration":367},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658484258788,"stop":1658484259419,"duration":631},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Add New Rule","time":{"start":1658484259423,"stop":1658484259815,"duration":392},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658484259423,"stop":1658484259708,"duration":285},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Tick Activate Rule upon save","time":{"start":1658484259815,"stop":1658484259889,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Fill in Rule Name","time":{"start":1658484259889,"stop":1658484260057,"duration":168},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select static condition from dropdown: 'Email'","time":{"start":1658484260057,"stop":1658484260152,"duration":95},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"field","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select condition option from dropdown: 'Matches'","time":{"start":1658484260153,"stop":1658484260242,"duration":89},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"opt","value":"'Matches'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value type from dropdown: 'Email:'","time":{"start":1658484260243,"stop":1658484260328,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email:'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in value input: 'tc_rs_wl@test.com'","time":{"start":1658484260328,"stop":1658484260998,"duration":670},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'tc_rs_wl@test.com'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658484260998,"stop":1658484261005,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Add dynamic condition","time":{"start":1658484261005,"stop":1658484261091,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Select dynamic velocity type: 'Transaction Count'","time":{"start":1658484261091,"stop":1658484261214,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Transaction Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic treshold: 5","time":{"start":1658484261214,"stop":1658484261326,"duration":112},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"5"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in dynamic condition value","time":{"start":1658484261326,"stop":1658484261442,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"3"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select dynamic group by condition: 'Email'","time":{"start":1658484261442,"stop":1658484261725,"duration":283},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'Email'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in comments","time":{"start":1658484261725,"stop":1658484261874,"duration":149},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm new rule","time":{"start":1658484261874,"stop":1658484265042,"duration":3168},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Filter rules table by name","time":{"start":1658484267044,"stop":1658484267406,"duration":362},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658484267044,"stop":1658484267083,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get first rule in table","time":{"start":1658484268408,"stop":1658484268515,"duration":107},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Expand Rules Console Navbar","time":{"start":1658484268539,"stop":1658484268585,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658484268590,"stop":1658484268699,"duration":109},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658484268958,"stop":1658484269126,"duration":168},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Watchlist Name","time":{"start":1658484269259,"stop":1658484269453,"duration":194},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'TWL_tc_rs_wl_Txn Count'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Watchlist Type","time":{"start":1658484269454,"stop":1658484269586,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"'IP Address'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select value to edit #\"1\"","time":{"start":1658484269586,"stop":1658484269586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"number","value":"1"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Value option dropdown: \"'IP Address:'\"","time":{"start":1658484269586,"stop":1658484269801,"duration":215},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658484269586,"stop":1658484269624,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f398f9671d0>, 'IP Address:')"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter input value: \"'127.5.5.99'\"","time":{"start":1658484269801,"stop":1658484270162,"duration":361},"status":"passed","steps":[{"name":"Get value fieldset section","time":{"start":1658484269801,"stop":1658484269818,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter IPv4 input","time":{"start":1658484269848,"stop":1658484270162,"duration":314},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"9efe07cd9f92b596b20051dae40f4b17\", element=\"1ecfb788-125b-4b7c-8745-02078d72ec62\")>"},{"name":"ip_addr","value":"'127.5.5.99'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"args","value":"(<fw.pages.watchlist.create_watchlist_page.CreateWatchlistPage object at 0x7f398f9671d0>, '127.5.5.99')"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Select Decision Option: 'block'","time":{"start":1658484270162,"stop":1658484270169,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"decision_value","value":"'block'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter Comments","time":{"start":1658484270169,"stop":1658484270372,"duration":203},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"comments","value":"'test automation rule (delete me)'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click confirm create watchlist","time":{"start":1658484270373,"stop":1658484270450,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658484272483,"stop":1658484272514,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658484273899,"stop":1658484274127,"duration":228},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658484273925,"stop":1658484274049,"duration":124},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Activate Watchlist","time":{"start":1658484274423,"stop":1658484276020,"duration":1597},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get Watchlist Status","time":{"start":1658484276020,"stop":1658484276058,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Send test transaction","time":{"start":1658484276058,"stop":1658484276648,"duration":590},"status":"passed","steps":[],"attachments":[{"uid":"581d6e0e1ad8a720","name":"Transaction payload details","source":"581d6e0e1ad8a720.txt","type":"text/plain","size":1341},{"uid":"86f22aca2d4fca23","name":"Transaction response details","source":"86f22aca2d4fca23.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '4'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658484276648,"stop":1658484276649,"duration":1},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658484276648,"stop":1658484276648,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658484276649,"stop":1658484277231,"duration":582},"status":"passed","steps":[],"attachments":[{"uid":"596f0c0c1007dbe2","name":"Transaction payload details","source":"596f0c0c1007dbe2.txt","type":"text/plain","size":1341},{"uid":"b6ef72443419cdc8","name":"Transaction response details","source":"b6ef72443419cdc8.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658484277231,"stop":1658484277231,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658484277231,"stop":1658484277231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658484277232,"stop":1658484277823,"duration":591},"status":"passed","steps":[],"attachments":[{"uid":"31b70e38e5b8ef05","name":"Transaction payload details","source":"31b70e38e5b8ef05.txt","type":"text/plain","size":1341},{"uid":"6ebf04cd163ec406","name":"Transaction response details","source":"6ebf04cd163ec406.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658484277823,"stop":1658484277824,"duration":1},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658484277824,"stop":1658484277824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658484277824,"stop":1658484278427,"duration":603},"status":"passed","steps":[],"attachments":[{"uid":"f7e5a0b308fc7b19","name":"Transaction payload details","source":"f7e5a0b308fc7b19.txt","type":"text/plain","size":1341},{"uid":"f351e9b991af8f45","name":"Transaction response details","source":"f351e9b991af8f45.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658484278427,"stop":1658484278427,"duration":0},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658484278427,"stop":1658484278427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658484278427,"stop":1658484279017,"duration":590},"status":"passed","steps":[],"attachments":[{"uid":"d4296ad1c0580555","name":"Transaction payload details","source":"d4296ad1c0580555.txt","type":"text/plain","size":1341},{"uid":"59a7795aa5de7a4c","name":"Transaction response details","source":"59a7795aa5de7a4c.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658484279017,"stop":1658484279018,"duration":1},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658484279018,"stop":1658484279018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658484279018,"stop":1658484279600,"duration":582},"status":"passed","steps":[],"attachments":[{"uid":"6c61d599d9caf24a","name":"Transaction payload details","source":"6c61d599d9caf24a.txt","type":"text/plain","size":1341},{"uid":"e607b8eded2ce452","name":"Transaction response details","source":"e607b8eded2ce452.txt","type":"text/plain","size":71}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-999', 'merch_name': 'test-automation-vanilla', 'merch_cat_code': '5816', 'merch_group_id': '12345', 'ISO_MTI': '9999', 'pos_entry_mode': '009', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.0.3', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'steve_rodgers@test.com', 'cc_firstname': 'steve', 'cc_lastname': 'rodgers', 'cc_bin': '424242', 'cc_last4': '4242', 'cc_last_digits': '4242', 'cc_hash': '477bba133c182267fe5f086924abdc5db71f77bfc27f01f2843f2cdc69d89f05', 'cc_exp_date': '1225', 'billing_firstname': 'steve', 'billing_lastname': 'rodgers', 'billing_address': 'brooklyn', 'billing_state': 'New York', 'billing_country_alpha2': 'CN', 'billing_postal_code': '616', 'billing_currency': 'KRW', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'tt_vanilla', 'transaction_id_merch': '123', 'fw_cust_id': '60b7259c48675f1f9cf7c24c', 'fw_cust_code': 'XUNZZ53', 'api_version': '2'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658484279600,"stop":1658484279601,"duration":1},"status":"passed","steps":[{"name":"Assert transaction is scored","time":{"start":1658484279601,"stop":1658484279601,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 200, 'decline_rule': None, 'error': False, 'score_reason': ''}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Send test transaction","time":{"start":1658484279601,"stop":1658484280267,"duration":666},"status":"passed","steps":[],"attachments":[{"uid":"429899adf85d9a89","name":"Transaction payload details","source":"429899adf85d9a89.txt","type":"text/plain","size":1345},{"uid":"70b572655c978af2","name":"Transaction response details","source":"70b572655c978af2.txt","type":"text/plain","size":100}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-000', 'merch_name': 'test-automation-base', 'merch_cat_code': '5732', 'merch_group_id': '54321', 'ISO_MTI': '0110', 'pos_entry_mode': '01', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '127.0.1.1', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'tc_rs_wl@test.com', 'cc_firstname': 'tony', 'cc_lastname': 'stark', 'cc_bin': '555555', 'cc_last4': '4444', 'cc_last_digits': '4444', 'cc_hash': '2f725bbd1f405a1ed0336abaf85ddfeb6902a9984a76fd877c3b5cc3b5085a82', 'cc_exp_date': '0226', 'billing_firstname': 'tony', 'billing_lastname': 'stark', 'billing_address': 'Malibu Point', 'billing_state': 'California', 'billing_country_alpha2': 'US', 'billing_postal_code': '10880', 'billing_currency': 'USD', 'billing_amt': '1000', 'transaction_channel': '2', 'transaction_id_ext': 'tt_tc_rs_wl_Txn Count', 'transaction_id_merch': '321'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert transaction decision","time":{"start":1658484280267,"stop":1658484280268,"duration":1},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 51, in assert_txn_matches_decision\n    assert_txn_scored(fw_response)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[{"name":"Assert transaction is scored","time":{"start":1658484280267,"stop":1658484280267,"duration":0},"status":"failed","statusMessage":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/asserts/fraudwall_response.py\", line 15, in assert_txn_scored\n    raise AssertionError(f'Transaction response did not score as expected: {fw_response}')\n","steps":[],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}"},{"name":"score_expectation","value":"''"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"fw_response","value":"{'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}"},{"name":"decision","value":"'score'"},{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"6bf004a56525283a","name":"631ce5ea-2e2e-4ddf-b265-dc27fc2eacb5-attachment.png","source":"6bf004a56525283a.png","type":"image/png","size":77165}],"parameters":[],"stepsCount":61,"attachmentsCount":15,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"cleanup_watchlists::0","time":{"start":1658484280398,"stop":1658484285541,"duration":5143},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658484280400,"stop":1658484280459,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Watchlist Rules","time":{"start":1658484280459,"stop":1658484280632,"duration":173},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Wait for filter bar to load","time":{"start":1658484282930,"stop":1658484283011,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Get first watchlist in table","time":{"start":1658484284447,"stop":1658484284608,"duration":161},"status":"passed","steps":[{"name":"Assert has watchlists in table","time":{"start":1658484284465,"stop":1658484284552,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Delete Watchlist","time":{"start":1658484284716,"stop":1658484285061,"duration":345},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click Confirm Delete Watchlist","time":{"start":1658484285061,"stop":1658484285344,"duration":283},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"cleanup_smart_rules::0","time":{"start":1658484285542,"stop":1658484289852,"duration":4310},"status":"passed","steps":[{"name":"Expand Rules Console Navbar","time":{"start":1658484285544,"stop":1658484285736,"duration":192},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Navigate to Rules Console - Smart Rules","time":{"start":1658484285737,"stop":1658484285850,"duration":113},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Filter rules table by name","time":{"start":1658484288074,"stop":1658484288451,"duration":377},"status":"passed","steps":[{"name":"Wait for filter bar to load","time":{"start":1658484288074,"stop":1658484288116,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"rule_name","value":"'t_tc_rs_wl_Txn Count'"}],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get first rule in table","time":{"start":1658484289452,"stop":1658484289548,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click delete rule","time":{"start":1658484289548,"stop":1658484289641,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click confirm delete rule","time":{"start":1658484289641,"stop":1658484289765,"duration":124},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"fw_api_all::0","time":{"start":1658484289853,"stop":1658484289854,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login::0","time":{"start":1658484289855,"stop":1658484289855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout::0","time":{"start":1658484352743,"stop":1658484353105,"duration":362},"status":"passed","steps":[{"name":"Click Logout","time":{"start":1658484352898,"stop":1658484353098,"duration":200},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"browser::0","time":{"start":1658484353107,"stop":1658484353163,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('check_known_issues')"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.end2end.rules_console.dynamic_rule_behaviour"},{"name":"suite","value":"test_txn_count_rule_sum_blocked"},{"name":"subSuite","value":"TestTxnCountRuleSumBlocked"},{"name":"host","value":"ip-10-20-30-10"},{"name":"thread","value":"4335-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.end2end.rules_console.dynamic_rule_behaviour.test_txn_count_rule_sum_blocked"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"api_version","value":"'2'"},{"name":"browser","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"a9f92fe0ba0bc98a","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/2//#testresult/a9f92fe0ba0bc98a","status":"failed","statusDetails":"AssertionError: Transaction response did not score as expected: {'code': 400, 'decline_rule': 't_bc_rs_b_Billing Currency', 'error': False, 'score_reason': None}","time":{"start":1658401399722,"stop":1658401420685,"duration":20963}}]},"tags":["@pytest.mark.usefixtures('check_known_issues')","regression"]},"source":"6f1f25748d50d6e7.json","parameterValues":["'2'","'chrome'"]}