{"uid":"d94b77b5be6f0da0","name":"test_search_by_text[chrome-Merchant ID]","fullName":"tests.ui.transaction_logs.test_search_by.TestTxnUISearchBy#test_search_by_text","historyId":"832549ca43eec45d19e244182454b955","time":{"start":1658485651713,"stop":1658485658195,"duration":6482},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: No data found in table","statusTrace":"self = <test_search_by.TestTxnUISearchBy object at 0x7f398f4962d0>\ntext_field = 'Merchant ID'\nfw_api = <fw.api.client.FraudwallAPI object at 0x7f398f374750>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f398f3d7c50>\n\n    @pytest.mark.parametrize('text_field', COLUMNS_W_FILTER.keys())\n    def test_search_by_text(self, text_field, fw_api, txn_samples):\n        UNIQUE_TXN_ID = f'test_search_{text_field}_{self.current_timestr}'\n    \n        # send txn\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': UNIQUE_TXN_ID,\n        })\n        transaction.update(COLUMN_TEST_TXN_EXTRA_DATA)\n    \n        txn_resp = fw_api.send_transaction(transaction)\n    \n        field_name = COLUMNS_W_FILTER.get(text_field)\n        if field_name in COLUMN_TEST_DYNAMIC_FIELDS_DATA.keys():\n            # Some fields do not show up as sent to fraudwall\n            # May be subject to post processing (example: country/proxy type)\n            display_value = COLUMN_TEST_DYNAMIC_FIELDS_DATA.get(field_name)\n        else:\n            display_value = transaction.get(field_name)\n    \n        txn_page = TransactionLogsPage(self.driver)\n        txn_page.click_reset_search()\n        txn_page.enter_txn_id_filter(UNIQUE_TXN_ID)\n        txn_page.enter_search_fields(display_value)\n        txn_page.click_submit_search()\n    \n>       test_txn = txn_page.get_first_transaction()\n\ntests/ui/transaction_logs/test_search_by.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/misc/retry.py:18: in wrapper\n    return func(*args, **kwargs)\nfw/pages/transaction_logs/transaction_page.py:99: in get_first_transaction\n    return TxnRow(self.driver, txn_table.get_row_by_index(0))\nutils/elements/table_element.py:24: in get_row_by_index\n    return self.get_rows(rows_css)[index]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.elements.table_element.Table object at 0x7f398f5ec3d0>\nrows_css = 'tbody tr'\n\n    def get_rows(self, rows_css=\"tbody tr\"):\n        headers = self.get_header_row()\n        rows = self.element.find_elements_by_css_selector(rows_css)\n        data_rows = [TableRow(r, headers) for r in rows if not self.is_empty_row(r)]\n        if len(data_rows) == 0:\n>           raise NoSuchElementException(\"No data found in table\")\nE           selenium.common.exceptions.NoSuchElementException: Message: No data found in table\n\nutils/elements/table_element.py:20: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cfg","time":{"start":1658475055993,"stop":1658475055993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"users","time":{"start":1658475055994,"stop":1658475055994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1658485635234,"stop":1658485636781,"duration":1547},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout","time":{"start":1658485636782,"stop":1658485636782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"check_known_issues","time":{"start":1658485651623,"stop":1658485651623,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login","time":{"start":1658485651623,"stop":1658485651710,"duration":87},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"fw_api","time":{"start":1658485651711,"stop":1658485651712,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"txn_samples","time":{"start":1658485651712,"stop":1658485651712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: No data found in table","statusTrace":"self = <test_search_by.TestTxnUISearchBy object at 0x7f398f4962d0>\ntext_field = 'Merchant ID'\nfw_api = <fw.api.client.FraudwallAPI object at 0x7f398f374750>\ntxn_samples = <test_data.transactions.TransactionSamples object at 0x7f398f3d7c50>\n\n    @pytest.mark.parametrize('text_field', COLUMNS_W_FILTER.keys())\n    def test_search_by_text(self, text_field, fw_api, txn_samples):\n        UNIQUE_TXN_ID = f'test_search_{text_field}_{self.current_timestr}'\n    \n        # send txn\n        transaction = copy.deepcopy(txn_samples.BASE_TEST)\n        transaction.update({\n            'transaction_id_ext': UNIQUE_TXN_ID,\n        })\n        transaction.update(COLUMN_TEST_TXN_EXTRA_DATA)\n    \n        txn_resp = fw_api.send_transaction(transaction)\n    \n        field_name = COLUMNS_W_FILTER.get(text_field)\n        if field_name in COLUMN_TEST_DYNAMIC_FIELDS_DATA.keys():\n            # Some fields do not show up as sent to fraudwall\n            # May be subject to post processing (example: country/proxy type)\n            display_value = COLUMN_TEST_DYNAMIC_FIELDS_DATA.get(field_name)\n        else:\n            display_value = transaction.get(field_name)\n    \n        txn_page = TransactionLogsPage(self.driver)\n        txn_page.click_reset_search()\n        txn_page.enter_txn_id_filter(UNIQUE_TXN_ID)\n        txn_page.enter_search_fields(display_value)\n        txn_page.click_submit_search()\n    \n>       test_txn = txn_page.get_first_transaction()\n\ntests/ui/transaction_logs/test_search_by.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/misc/retry.py:18: in wrapper\n    return func(*args, **kwargs)\nfw/pages/transaction_logs/transaction_page.py:99: in get_first_transaction\n    return TxnRow(self.driver, txn_table.get_row_by_index(0))\nutils/elements/table_element.py:24: in get_row_by_index\n    return self.get_rows(rows_css)[index]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.elements.table_element.Table object at 0x7f398f5ec3d0>\nrows_css = 'tbody tr'\n\n    def get_rows(self, rows_css=\"tbody tr\"):\n        headers = self.get_header_row()\n        rows = self.element.find_elements_by_css_selector(rows_css)\n        data_rows = [TableRow(r, headers) for r in rows if not self.is_empty_row(r)]\n        if len(data_rows) == 0:\n>           raise NoSuchElementException(\"No data found in table\")\nE           selenium.common.exceptions.NoSuchElementException: Message: No data found in table\n\nutils/elements/table_element.py:20: NoSuchElementException","steps":[{"name":"Send test transaction","time":{"start":1658485651714,"stop":1658485652389,"duration":675},"status":"passed","steps":[],"attachments":[{"uid":"4dc44c18feeb77e3","name":"Transaction payload details","source":"4dc44c18feeb77e3.txt","type":"text/plain","size":1454},{"uid":"9daaf7f43e1699d3","name":"Transaction response details","source":"9daaf7f43e1699d3.txt","type":"text/plain","size":114}],"parameters":[{"name":"payload","value":"{'merch_id': 'FW-000', 'merch_name': 'test-automation-base', 'merch_cat_code': '5732', 'merch_group_id': '54321', 'ISO_MTI': '0110', 'pos_entry_mode': '01', 'terminal_id': '99', 'ISO_pcc': '00', 'ISO_proc_code': '10200', 'user_ipv4': '8.8.8.8', 'browser_header': {}, 'browser_header_json': '{\"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\", \"Accept-Encoding\": \"gzip, deflate, sdch\", \"Accept-Language\": \"en-US,en;q=0.8\", \"Cache-Control\": \"max-age=0\", \"Connection\": \"keep-alive\"}', 'user_email': 'tony_stark@test.com', 'cc_firstname': 'tony', 'cc_lastname': 'stark', 'cc_bin': '555555', 'cc_last4': '4444', 'cc_last_digits': '4444', 'cc_hash': '2f725bbd1f405a1ed0336abaf85ddfeb6902a9984a76fd877c3b5cc3b5085a82', 'cc_exp_date': '0226', 'billing_firstname': 'tony', 'billing_lastname': 'stark', 'billing_address': 'Malibu Point', 'billing_state': 'California', 'billing_country_alpha2': 'US', 'billing_postal_code': '10880', 'billing_currency': 'USD', 'billing_amt': '1000', 'transaction_channel': '0', 'transaction_id_ext': 'test_search_Merchant ID_20220722_102731', 'transaction_id_merch': '321', 'device_loclat': '1.290270', 'device_loclng': '103.851959', 'device_info': 'test_info'}"}],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter Txn ID filer: 'test_search_Merchant ID_20220722_102731'","time":{"start":1658485654152,"stop":1658485655216,"duration":1064},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"value","value":"'test_search_Merchant ID_20220722_102731'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"1556ae1151b1697f","name":"0c2022f3-a722-4ff4-83af-a81e15891252-attachment.png","source":"1556ae1151b1697f.png","type":"image/png","size":76950}],"parameters":[],"stepsCount":2,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"fw_api::0","time":{"start":1658485658314,"stop":1658485658314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_login::0","time":{"start":1658485658315,"stop":1658485658315,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ui_logout::0","time":{"start":1658485754762,"stop":1658485755957,"duration":1195},"status":"passed","steps":[{"name":"Click Logout","time":{"start":1658485754846,"stop":1658485755957,"duration":1111},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <li role=\"menuitem\" id=\"logoutLink\" tabindex=\"-1\">...</li> is not clickable at point (705, 67). Other element would receive the click: <a href=\"/settings\">...</a>\n  (Session info: headless chrome=103.0.5060.114)\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/fw/pages/top_navbar_page.py\", line 22, in click_logout\n    logout_btn.click()\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"browser::0","time":{"start":1658485755962,"stop":1658485756022,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('check_known_issues')"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.ui.transaction_logs"},{"name":"suite","value":"test_search_by"},{"name":"subSuite","value":"TestTxnUISearchBy"},{"name":"host","value":"ip-10-20-30-10"},{"name":"thread","value":"4335-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.transaction_logs.test_search_by"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"text_field","value":"'Merchant ID'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('check_known_issues')","regression"]},"source":"d94b77b5be6f0da0.json","parameterValues":["'chrome'","'Merchant ID'"]}