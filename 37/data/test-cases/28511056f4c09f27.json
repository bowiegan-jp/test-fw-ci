{"uid":"28511056f4c09f27","name":"Issuer Response Channels","fullName":"tests.end2end.transactions.test_issuer_response.TestIssuerReponse#test_issuer_response","historyId":"efd8933c6b95baaa0593ee886e01feac","time":{"start":1660031689335,"stop":1660031689335,"duration":0},"status":"broken","statusMessage":"TimeoutError: Failed to login.","statusTrace":"page = <fw.pages.login_page.LoginPage object at 0x7f5a533308d0>\nwait_duration = 5, fail_message = 'Failed to login.'\n\n    @contextmanager\n    def url_change(page, wait_duration=5, fail_message=''):\n        \"\"\"\n        context manager for url change driver wait to be used in tests when url change is expected\n        \"\"\"\n        current_url = page.driver.current_url\n        yield\n        try:\n>           WebDriverWait(page.driver, wait_duration).until(url_changed(current_url))\n\nutils/explicit_waits/custom_waits.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b4ac227fc8dd3c6c92fe7ea7fe9a08a7\")>\nmethod = <utils.explicit_waits.custom_waits.url_changed object at 0x7f5a533305d0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../_tool/Python/3.7.13/x64/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ncfg = <config.Config object at 0x7f5a5340d310>\nusers = <config.Credentials object at 0x7f5a5340dad0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4ac227fc8dd3c6c92fe7ea7fe9a08a7\")>\n\n    @allure.step(\"UI Login\")\n    @pytest.fixture\n    def ui_login(cfg, users, browser):\n        \"\"\"\n        Logs in test to fraudwall and logs out after test\n        \"\"\"\n        browser.get(cfg.TEST_URL)\n        login_page = fw.pages.login_page.LoginPage(browser)\n        if login_page.get_current_url_route() == 'login':\n            login_page.enter_username(users.ADMIN.username)\n            login_page.enter_password(users.ADMIN.password)\n            time.sleep(2)\n            with url_change(login_page, fail_message=\"Failed to login.\"):\n>               landing_page = login_page.click_login()\n\ntests/conftest.py:192: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../_tool/Python/3.7.13/x64/lib/python3.7/contextlib.py:119: in __exit__\n    next(self.gen)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npage = <fw.pages.login_page.LoginPage object at 0x7f5a533308d0>\nwait_duration = 5, fail_message = 'Failed to login.'\n\n    @contextmanager\n    def url_change(page, wait_duration=5, fail_message=''):\n        \"\"\"\n        context manager for url change driver wait to be used in tests when url change is expected\n        \"\"\"\n        current_url = page.driver.current_url\n        yield\n        try:\n            WebDriverWait(page.driver, wait_duration).until(url_changed(current_url))\n        except TimeoutException as te:\n            if fail_message:\n>               raise TimeoutError(fail_message)\nE               TimeoutError: Failed to login.\n\nutils/explicit_waits/custom_waits.py:33: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"ui_login","time":{"start":1660031689336,"stop":1660031696940,"duration":7604},"status":"broken","statusMessage":"TimeoutError: Failed to login.\n","statusTrace":"  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/_tool/Python/3.7.13/x64/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/_tool/Python/3.7.13/x64/lib/python3.7/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/_tool/Python/3.7.13/x64/lib/python3.7/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/tests/conftest.py\", line 192, in ui_login\n    landing_page = login_page.click_login()\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/_tool/Python/3.7.13/x64/lib/python3.7/contextlib.py\", line 119, in __exit__\n    next(self.gen)\n  File \"/var/snap/amazon-ssm-agent/5656/actions-runner/_work/test-fw-ci/test-fw-ci/utils/explicit_waits/custom_waits.py\", line 33, in url_change\n    raise TimeoutError(fail_message)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},{"name":"check_known_issues","time":{"start":1660031689336,"stop":1660031689336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('check_known_issues')"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.end2end.transactions"},{"name":"suite","value":"test_issuer_response"},{"name":"subSuite","value":"TestIssuerReponse"},{"name":"host","value":"ip-10-20-30-10"},{"name":"thread","value":"10204-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.end2end.transactions.test_issuer_response"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"txn_channel","value":"(3, 'MPOS')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":4,"unknown":0,"total":7},"items":[{"uid":"2c35708717da0bb5","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/35//#testresult/2c35708717da0bb5","status":"passed","time":{"start":1660024002812,"stop":1660024025348,"duration":22536}},{"uid":"47390f43049ba9e6","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/1//#testresult/47390f43049ba9e6","status":"passed","time":{"start":1658484754641,"stop":1658484776806,"duration":22165}},{"uid":"b3351c739a1e2448","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/34//#testresult/b3351c739a1e2448","status":"passed","time":{"start":1658389012164,"stop":1658389064148,"duration":51984}},{"uid":"cb90cf2f3653e5d4","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/33//#testresult/cb90cf2f3653e5d4","status":"passed","time":{"start":1658388341897,"stop":1658388438650,"duration":96753}},{"uid":"ef679f5168e28476","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/32//#testresult/ef679f5168e28476","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=39541): Max retries exceeded with url: /session/153edf670ef0b40e11c1d81d51e0fc9d/url (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f80dce9db90>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1658386857655,"stop":1658386857655,"duration":0}},{"uid":"18c4b3c5330532dc","reportUrl":"https://bowiegan-jp.github.io/test-fw-ci/31//#testresult/18c4b3c5330532dc","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='10.20.20.221', port=443): Max retries exceeded with url: /api/transaction (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1091)')))","time":{"start":1658386174198,"stop":1658386174219,"duration":21}}]},"tags":["@pytest.mark.usefixtures('check_known_issues')","regression"]},"source":"28511056f4c09f27.json","parameterValues":["'chrome'","(3, 'MPOS')"]}